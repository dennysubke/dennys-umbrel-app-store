version: "3.7"

services:
  app_proxy:
    environment:
      APP_HOST: denny-dokploy_web_1
      APP_PORT: 3000

  docker:
    image: docker:28.0.4-dind@sha256:ddb0033088b4fab74881ade341a582e3c6c8021b82377703ba1a6106bd3ded44
    privileged: true
    network_mode: host
    stop_grace_period: 1m
    restart: on-failure
    environment:
      DOCKER_HOST: "unix:///data/docker.sock"
    command: >
      sh -lc '
        set -eu
        dockerd
          --data-root /data/data
          --exec-root /data/exec
          --host unix:///data/docker.sock
          --pidfile /data/docker.pid &
        DPID=$!
        for i in $(seq 1 60); do
          DOCKER_HOST=unix:///data/docker.sock docker info >/dev/null 2>&1 && break
          sleep 1
        done
        DOCKER_HOST=unix:///data/docker.sock docker swarm init --advertise-addr 127.0.0.1 >/dev/null 2>&1 || true
        wait $$DPID
      '
    volumes:
      - docker_runtime:/data
    healthcheck:
      test: ["CMD", "sh", "-lc", "DOCKER_HOST=unix:///data/docker.sock docker info >/dev/null 2>&1"]
      interval: 5s
      timeout: 4s
      retries: 30
      start_period: 15s

  web:
    image: dokploy/dokploy:latest
    environment:
      DATABASE_URL: postgresql://dokploy:supersecurepass@postgres:5432/dokploy
      REDIS_HOST: redis
      RELEASE_TAG: latest
      DOCKER_HOST: unix:///dind/docker.sock
    depends_on:
      docker:
        condition: service_healthy
      postgres:
        condition: service_started
      redis:
        condition: service_started
    volumes:
      - ${APP_DATA_DIR}/data/etc:/etc/dokploy
      - docker_runtime:/dind
      - ${APP_DATA_DIR}/data/docker-config:/root/.docker
    restart: on-failure

  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER: dokploy
      POSTGRES_PASSWORD: supersecurepass
      POSTGRES_DB: dokploy
    volumes:
      - ${APP_DATA_DIR}/data/postgres:/var/lib/postgresql/data
    restart: on-failure

  redis:
    image: redis:7
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - ${APP_DATA_DIR}/data/redis:/data
    restart: on-failure

  traefik:
    image: traefik:v3.5
    command:
      - --log.level=INFO
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --providers.file.directory=/etc/dokploy/traefik/dynamic
      - --providers.file.watch=true
    depends_on:
      docker:
        condition: service_healthy
    volumes:
      - docker_runtime:/var/run:ro
      - ${APP_DATA_DIR}/data/traefik/dynamic:/etc/dokploy/traefik/dynamic
    restart: on-failure

volumes:
  docker_runtime:
