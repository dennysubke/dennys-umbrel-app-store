version: "3.7"

services:
  app_proxy:
    environment:
      APP_HOST: denny-coolify_coolify_1
      APP_PORT: 80

  coolify:
    image: ghcr.io/coollabsio/coolify:latest
    restart: on-failure
    user: "9999:9999"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      soketi:
        condition: service_healthy
    volumes:
      - ${APP_DATA_DIR}/data/source/.env:/var/www/html/.env:ro
      - ${APP_DATA_DIR}/data/ssh:/var/www/html/storage/app/ssh
      - ${APP_DATA_DIR}/data/applications:/var/www/html/storage/app/applications
      - ${APP_DATA_DIR}/data/databases:/var/www/html/storage/app/databases
      - ${APP_DATA_DIR}/data/services:/var/www/html/storage/app/services
      - ${APP_DATA_DIR}/data/backups:/var/www/html/storage/app/backups
      - ${APP_DATA_DIR}/data/webhooks:/var/www/html/storage/app/webhooks-during-maintenance
    environment:
      # Basis
      APP_ENV: production
      APP_NAME: Coolify
      APP_DEBUG: "false"
      APP_URL: http://umbrel.local:8015
      # Gültigen Laravel-Key in .env setzen (z.B. base64:…)
      APP_KEY: base64:changeme

      # Datenbank
      DB_CONNECTION: pgsql
      DB_HOST: postgres
      DB_PORT: 5432
      DB_DATABASE: coolify
      DB_USERNAME: coolify
      DB_PASSWORD: coolifypass

      # Queue / Redis
      QUEUE_CONNECTION: redis
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: redispass

      # PHP/Horizon Tuning
      PHP_MEMORY_LIMIT: 512M
      PHP_PM_CONTROL: dynamic
      PHP_PM_START_SERVERS: 1
      PHP_PM_MIN_SPARE_SERVERS: 1
      PHP_PM_MAX_SPARE_SERVERS: 10
      HORIZON_BALANCE: simple
      HORIZON_MAX_PROCESSES: 10
      HORIZON_BALANCE_MAX_SHIFT: 1
      HORIZON_BALANCE_COOLDOWN: 3

      # Realtime (Soketi/Pusher)
      PUSHER_HOST: soketi
      PUSHER_BACKEND_HOST: soketi
      PUSHER_PORT: 6001
      PUSHER_BACKEND_PORT: 6001
      PUSHER_SCHEME: http
      PUSHER_APP_ID: app
      PUSHER_APP_KEY: key
      PUSHER_APP_SECRET: secret

      # Sonstiges
      SSL_MODE: off
      AUTOUPDATE: "false"
      SELF_HOSTED: "true"
      SSH_MUX_ENABLED: "true"
      SSH_MUX_PERSIST_TIME: 60
      SUBSCRIPTION_PROVIDER: none
    healthcheck:
      test: curl --fail http://127.0.0.1:80/api/health || exit 1
      interval: 5s
      retries: 10
      timeout: 2s

  postgres:
    image: postgres:15-alpine
    restart: on-failure
    environment:
      POSTGRES_USER: coolify
      POSTGRES_PASSWORD: coolifypass
      POSTGRES_DB: coolify
    volumes:
      - ${APP_DATA_DIR}/data/postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U coolify -d coolify"]
      interval: 5s
      retries: 10
      timeout: 2s

  redis:
    image: redis:7-alpine
    restart: on-failure
    command: redis-server --save 20 1 --loglevel warning --requirepass redispass
    environment:
      REDIS_PASSWORD: redispass
    volumes:
      - ${APP_DATA_DIR}/data/redis:/data
    healthcheck:
      test: ["CMD-SHELL", "redis-cli -a redispass ping | grep PONG || exit 1"]
      interval: 5s
      retries: 10
      timeout: 2s

  soketi:
    image: ghcr.io/coollabsio/coolify-realtime:1.0.1
    restart: on-failure
    environment:
      APP_NAME: Coolify
      SOKETI_DEBUG: "false"
      SOKETI_DEFAULT_APP_ID: app
      SOKETI_DEFAULT_APP_KEY: key
      SOKETI_DEFAULT_APP_SECRET: secret
    volumes:
      - ${APP_DATA_DIR}/data/ssh:/var/www/html/storage/app/ssh
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://127.0.0.1:6001/ready && wget -qO- http://127.0.0.1:6002/ready || exit 1"]
      interval: 5s
      retries: 10
      timeout: 2s
