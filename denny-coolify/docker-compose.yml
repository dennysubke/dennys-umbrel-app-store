version: "3.7"

services:
  app_proxy:
    environment:
      APP_HOST: denny-coolify_web_1
      APP_PORT: 8080

  db:
    image: postgres:16-alpine
    restart: on-failure
    environment:
      POSTGRES_DB: coolify
      POSTGRES_USER: coolify
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-coolify}
    volumes:
      - ${APP_DATA_DIR}/data/postgres:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    restart: on-failure
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - ${APP_DATA_DIR}/data/redis:/data

  web:
    image: ghcr.io/coollabsio/coolify:latest
    restart: on-failure
    depends_on:
      - db
      - redis
    environment:
      # Laravel / App
      APP_ENV: production
      APP_DEBUG: "false"
      # DB
      DB_CONNECTION: pgsql
      DB_HOST: db
      DB_PORT: 5432
      DB_DATABASE: coolify
      DB_USERNAME: coolify
      DB_PASSWORD: ${POSTGRES_PASSWORD:-coolify}
      # Redis / Queue / Cache / Session
      REDIS_HOST: redis
      REDIS_PORT: 6379
      CACHE_DRIVER: redis
      QUEUE_CONNECTION: redis
      SESSION_DRIVER: database
      # Webserver
      WEB_PORT: 8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${APP_DATA_DIR}/data/ssh:/var/lib/coolify/ssh
      - ${APP_DATA_DIR}/data/storage:/var/www/html/storage
